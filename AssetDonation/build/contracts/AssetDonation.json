{
  "contractName": "AssetDonation",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Fatemeh Heidari Soureshjani\",\"details\":\"time\",\"methods\":{},\"title\":\"A Asset donation smart contract\"},\"userdoc\":{\"methods\":{},\"notice\":\"This contract facilitates donation of physical assets for specific periods of time between asset owners and receivers\"}},\"settings\":{\"compilationTarget\":{\"/home/fatemeh/Desktop/Consensys Course/assetdonation/AssetDonation/contracts/AssetDonation.sol\":\"AssetDonation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"/home/fatemeh/Desktop/Consensys Course/assetdonation/AssetDonation/contracts/AssetDonation.sol\":{\"keccak256\":\"0xcae619f0142c675e604839d8ac66a2d6c3991712369664d373e27e1ea854bb80\",\"urls\":[\"bzz-raw://38c3e5cb09d9f6bab06830af5a53b5239ce93edae013c5806c20fe3c430efbd1\",\"dweb:/ipfs/QmWzs88tHtQDVggcPWWrh6aNJr6iwdLBzF2BwLfnzHg4xY\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xfc398838759c3248bdca40f7bc060e789c8d715df22f9eee7494bcafe14fa1b8\",\"urls\":[\"bzz-raw://ca2e28a5681be0558b2de6a24c107299925f8bd9e3244e9a70b033d6eab782c8\",\"dweb:/ipfs/QmX5kRT4Gwq4GQYfEdxVsE7PALpGfQEuQJhsfpCap9inKm\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xaf936da92f3a9a4f98b237323b5eb1d813fb86c4d07a184beba7027cf0509ba3\",\"urls\":[\"bzz-raw://aaa210e132e06975eb9f20060db6ba7dee78f6fce691a1c2489525584de521c0\",\"dweb:/ipfs/QmRwzi4nUW3UWBwhY5ik2xW3JZo9NMLN5UyGi1xPpMQYrh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x3636662804cd8f474536b2875a9038a4c3fb91879f1bbff48af5c3f140fcd2f0\",\"urls\":[\"bzz-raw://9fab8521263fa581544000cb57335a3f2e6bcdfbb5579d3ceaa5acf741c67c4f\",\"dweb:/ipfs/QmZfXnMom7JSNtfyie5yGPN1SUC4SmHbz4ScVBH88URmA7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xe7f984cedc00a138dc27f263c73c32ba9a4b2fd23b6c34ac46f46c074b943538\",\"urls\":[\"bzz-raw://0f4acda12f076fe7584921241ddbb5b460ca7cad6cb8a42252ac7f2a9f539127\",\"dweb:/ipfs/QmQmfhkEv9GrhdWe67QtXnU19AMuoEmy31QnHPkucdYLjZ\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x321ee37ef4925020aa818a03ec7fe48e057561f65ab009a84f6c20c86026ade7\",\"urls\":[\"bzz-raw://01f9d74a17a56024984251b97e428e24c9d3abffbae5bd290f0ec263c82e9694\",\"dweb:/ipfs/QmRryCuuXu2ukrDmatB8TqdEhPLiK6NBRt41RiPUaX1qKy\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x244e4b74b17716120cf28e58636f11c699b8c0c94628bd952a95cee038d7e32b\",\"urls\":[\"bzz-raw://198d566157120c526bd6b5086b32cae85a11389b8a538f533ba9f9447915da0e\",\"dweb:/ipfs/QmeE6d8KWERx7f1FVS5tMnitNJxBm2yWXRSEUBF7R6voLh\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x79484115dbfa737054f73e041009a02eeb434dd81be5d684bf4255ad3b5ab558\",\"urls\":[\"bzz-raw://12c119699463450c2544f5b9d8709b5e9e9164c62948a79c3ec53423a051d969\",\"dweb:/ipfs/QmPJduzSAaekq447QeFqAp3E7dc8CnNk5ajofckJ4ahA7Q\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c01d41e938d3fde6d8bcdb814370190c9003a8714f9a2b90a61eec31044637ad64736f6c63430006020033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220c01d41e938d3fde6d8bcdb814370190c9003a8714f9a2b90a61eec31044637ad64736f6c63430006020033",
  "sourceMap": "405:10566:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;405:10566:1;;;;;;;",
  "deployedSourceMap": "405:10566:1:-:0;;;;;",
  "source": "pragma solidity ^0.6.2;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/// @title A Asset donation smart contract\n/// @author Fatemeh Heidari Soureshjani\n/// @notice This contract facilitates donation of physical assets for specific periods of time between asset owners and receivers\n/// @dev time\n\ncontract AssetDonation {//is ERC721 {\n    uint32 lastAssetId;\n    uint32 lastRequestId;\n    uint32 constant maxNoOfReqsPerAsst = 3;\n\n    // mapping(address => bool) public donors;\n    // mapping(address => bool) public receivers;\n\n    // constructor() public ERC721(\"MyToken\", \"MTS\") AccessControl() {\n    //     lastAssetId = 0;\n    //     lastRequestId = 0;\n    // }\n\n\n\n    // enum Status {Free, Requested, Donated, Inactive, Burned}\n\n    // struct Asset {\n    //     uint32 assetId;\n    //     string assetDescription;\n    //     uint32 availablityDate;\n    //     string location;\n    //     Status status;\n    //     address owner;\n    //     address recipient;\n    //     uint32 donatedDateFrom;\n    //     uint32 donatedDateTo;\n    //     uint32 requestCount;\n    //     string imageIPFSHash;\n    // }\n\n    // mapping(uint32 => Asset) public donationList;\n\n    // struct Request {\n    //     address receiver;\n    //     string requestDescription;\n    //     uint32 requestDateFrom;\n    //     uint32 requestDateTo;\n    // }\n    // mapping(uint32 => mapping(uint32 => Request)) public assetRequestList;\n\n    // modifier isDonor(address donorAddress) {\n    //     require(hasRole(DONOR, donorAddress));\n    //     _;\n    // }\n\n    // modifier assetIsFree(uint32 assetId) {\n    //     require(donationList[assetId].recipient == address(0));\n    //     _;\n    // }\n\n    // modifier assetExists(uint32 assetId) {\n    //     require(donationList[assetId].owner != address(0),\"Invalid asset\");\n    //     _;\n    // }\n\n    // event LogFree(uint32 assetId);\n    // event LogRequested(uint32 assetId);\n    // event LogDonated(uint32 assetId);\n    // event LogInactive(uint32 assetId);\n    // event LogIBurned(uint32 assetId);\n\n    // modifier isReceiver(address receiverAddress) {\n    //     require(hasRole(RECEIVER, receiverAddress));\n    //     _;\n    // }\n\n    // /// @notice Add a new donor\n    // function addDonor() public {\n    //     donors[msg.sender] = false;\n    //     //approveDonor(msg.sender);\n    // }\n\n    // /// @notice Admin approves an address to have the donor role\n    // /// @param donorAddress The address of donor to be approved\n    // function approveDonor(address donorAddress) public {\n    //     grantRole(DONOR, donorAddress);\n    //     donors[donorAddress] = true;\n    // }\n\n    // /// @notice Adds a new asset to list of donated assets(Should be called by a donor)\n    // /// @dev other asset struct members should be added\n    // /// @param assetDescription Descrption of the asset entered by owner\n    // /// @param availablityDate the first date the owner can donate the asset\n    // /// @param location the location of the donated asset\n    // /// @param imageIPFSHash IPFS hash of the asset image uploaded by owner and saved to IPFS\n    // function addAsset(\n    //     string memory assetDescription,\n    //     uint32 availablityDate,\n    //     string memory location, /*isDonor(msg.sender)*/\n    //     string memory imageIPFSHash\n    // ) public {\n    //     uint32 assetId = mintToken(msg.sender);\n    //     donationList[assetId] = Asset({\n    //         assetId: assetId,\n    //         assetDescription: assetDescription,\n    //         availablityDate: availablityDate,\n    //         location: location,\n    //         status: Status.Free,\n    //         owner: msg.sender,\n    //         recipient: address(0),\n    //         donatedDateFrom: 0,\n    //         donatedDateTo: 0,\n    //         requestCount: 0,\n    //         imageIPFSHash: imageIPFSHash\n    //     });\n    //     emit LogFree(assetId);\n    // }\n\n    // /// @notice Returns all donations of an donor(it shoud be called by a donor)\n    // /// @dev There must be better way than returing always an array of 16\n    // /// @return Asset returns an array of type asset and length 16 of donations of msg.sender\n    // function getDonationsByOwner()\n    //     public\n    //     view\n    //     isDonor(msg.sender)\n    //     returns (Asset[16] memory)\n    // {\n    //     uint32 tokenCount = uint32(balanceOf(msg.sender));\n    //     uint32 index = 0;\n    //     uint32 tokenId;\n    //     Asset[16] memory assetList;\n    //     if (tokenCount <= 16) {\n    //         index = tokenCount;\n    //     } else {\n    //         index = 16;\n    //     }\n    //     for (uint32 i = 0; i < index; i++) {\n    //         tokenId = uint32(tokenOfOwnerByIndex(msg.sender, i));\n    //         assetList[i] = donationList[tokenId];\n    //     }\n    //     return assetList;\n    // }\n\n    // /// @notice returns all donations\n    // /// @dev There must be better way than returing always an array of 16\n    // /// @return Asset returns an array of type asset and length 16 of all donations\n    // function getAllDonations() public view returns (Asset[16] memory) {\n    //     uint32 index = 0;\n    //     Asset[16] memory assetList;\n    //     if (lastAssetId <= 16) {\n    //         index = lastAssetId;\n    //     } else {\n    //         index = 16;\n    //     }\n    //     for (uint32 i = 0; i < index; i++) {\n    //         assetList[i] = donationList[i];\n    //     }\n    //     return assetList;\n    // }\n\n    // /// @notice retrieves all request for a specific donation\n    // /// @dev There must be better way than returing always an array of 16\n    // /// @param assetId the unique asset id of donation\n    // /// @return Request returns an array of type Request and length 16\n    // function getDonationRequests(uint32 assetId)\n    //     public assetExists(assetId)\n    //     view\n    //     returns (Request[16] memory)\n    // {\n    //     Request[16] memory requestArray;\n    //     mapping(uint32 => Request) storage requestMapping\n    //      = assetRequestList[assetId];\n    //     for (uint32 i = 0; i < donationList[assetId].requestCount; i++) {\n    //         requestArray[i] = requestMapping[i];\n    //     }\n    //     return requestArray;\n    // }\n\n    // /// @notice The ERC721 stadard for nunfungible token is used to maintain ownership of assets\n    // /// @notice everytime a new token is minted based on current value of lastAssetId for assetOwner address, and then lastAssetId is increased\n    // /// @param assetOwner the owner of the new asset\n    // /// @return returns the id of new minted token\n    // function mintToken(address assetOwner) public returns (uint32) {\n    //     _safeMint(assetOwner, lastAssetId);\n    //     uint32 assetId = lastAssetId;\n    //     lastAssetId++;\n    //     return assetId;\n    // }\n\n    \n\n    // /// @notice a donor can approve a specific request and this function assigns the recipient of this asset to the recipientAddress\n    // /// @notice caller should be a donor and recipient should be a receiver\n    // /// @param assetId unique id of asset to be donated\n    // /// @param recipientAddress donation receiver\n    // function donateAsset(uint32 assetId, address recipientAddress)\n    //     public assetExists(assetId)\n    //     isDonor(msg.sender)\n    //     isReceiver(recipientAddress)\n    //     assetIsFree(assetId)\n    // {\n    //     donationList[assetId].recipient = recipientAddress;\n    //     donationList[assetId].status = Status.Donated;\n    // }\n\n    // /// @notice Adds an address to list of receivers\n    // function addReceiver() public {\n    //     receivers[msg.sender] = false;\n    // }\n\n    // /// @notice Admin approves an address to have the receiver role\n    // /// @param receiverAddress The address of receiver to be approved\n    // function approveReceiver(address receiverAddress) public {\n    //     grantRole(RECEIVER, receiverAddress);\n    //     receivers[receiverAddress] = true;\n    // }\n\n    // /// @notice A receiver can register a request for a specific donation previousely added\n    // /// @notice to list of donation by a donor\n    // /// @dev date conflicts can be checked\n    // /// @param assetId The unique id of donation\n    // /// @param requestDescription The description entered by the receiver\n    // /// @param requestDateFrom The starting date receiver needs this asset\n    // /// @param requestDateTo The ending date receiver needs this asset\n    // function requestAsset(\n    //     uint32 assetId,\n    //     string memory requestDescription,\n    //     uint32 requestDateFrom,\n    //     uint32 requestDateTo\n    // ) public assetExists(assetId){\n    //     Asset storage requestedItem = donationList[assetId];\n    //     //if (requestedItem.requestCount < maxNoOfReqsPerAsst) {\n    //     assetRequestList[assetId][requestedItem.requestCount] = Request({\n    //         receiver: msg.sender,\n    //         requestDescription: requestDescription,\n    //         requestDateFrom: requestDateFrom,\n    //         requestDateTo: requestDateTo\n    //     });\n    //     donationList[assetId].status = Status.Requested;\n    //     requestedItem.requestCount++;\n    // }\n\n//     function getDonation(uint32 assetId)\n//         public\n//         view\n//         returns (\n//             string memory assetDescription,\n//             uint32 availablityDate,\n//             string memory location,\n//             Status status,\n//             address owner,\n//             address recipient,\n//             string memory imageIPFSHash\n//         )\n//     {\n//         assetDescription = donationList[assetId].assetDescription;\n//         availablityDate = donationList[assetId].availablityDate;\n//         location = donationList[assetId].location;\n//         status = donationList[assetId].status;\n//         owner = donationList[assetId].owner;\n//         recipient = donationList[assetId].recipient;\n//         imageIPFSHash = donationList[assetId].imageIPFSHash;\n//         return (\n//             assetDescription,\n//             availablityDate,\n//             location,\n//             status,\n//             owner,\n//             recipient,\n//             imageIPFSHash\n//         );\n//     }\n//     function getRequest(uint32 assetId, uint32 requestId)\n//         public\n//         view\n//         returns (\n//             address receiver,\n//             string memory requestDescription,\n//             uint32 requestDateFrom,\n//             uint32 requestDateTo\n//         )\n//     {\n// Request storage request = assetRequestList[assetId][requestId];\n//             receiver = request.receiver;\n//             requestDescription = request.requestDescription;\n//             requestDateFrom = request.requestDateFrom;\n//             requestDateTo = request.requestDateTo;\n//         return (\n//             receiver,\n//             requestDescription,\n//             requestDateFrom,\n//             requestDateTo\n//         );\n//     }\n}\n",
  "sourcePath": "/home/fatemeh/Desktop/Consensys Course/assetdonation/AssetDonation/contracts/AssetDonation.sol",
  "ast": {
    "absolutePath": "/home/fatemeh/Desktop/Consensys Course/assetdonation/AssetDonation/contracts/AssetDonation.sol",
    "exportedSymbols": {
      "AssetDonation": [
        118
      ]
    },
    "id": 119,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 107,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 108,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 109,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 2250,
        "src": "59:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 110,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 1099,
        "src": "117:58:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title A Asset donation smart contract\n @author Fatemeh Heidari Soureshjani\n @notice This contract facilitates donation of physical assets for specific periods of time between asset owners and receivers\n @dev time",
        "fullyImplemented": true,
        "id": 118,
        "linearizedBaseContracts": [
          118
        ],
        "name": "AssetDonation",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 112,
            "name": "lastAssetId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 118,
            "src": "447:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 111,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "447:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 114,
            "name": "lastRequestId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 118,
            "src": "471:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 113,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "471:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 117,
            "name": "maxNoOfReqsPerAsst",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 118,
            "src": "497:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 115,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "497:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "534:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          }
        ],
        "scope": 119,
        "src": "405:10566:1"
      }
    ],
    "src": "0:10972:1"
  },
  "legacyAST": {
    "absolutePath": "/home/fatemeh/Desktop/Consensys Course/assetdonation/AssetDonation/contracts/AssetDonation.sol",
    "exportedSymbols": {
      "AssetDonation": [
        118
      ]
    },
    "id": 119,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 107,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 108,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 109,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 2250,
        "src": "59:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 110,
        "nodeType": "ImportDirective",
        "scope": 119,
        "sourceUnit": 1099,
        "src": "117:58:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title A Asset donation smart contract\n @author Fatemeh Heidari Soureshjani\n @notice This contract facilitates donation of physical assets for specific periods of time between asset owners and receivers\n @dev time",
        "fullyImplemented": true,
        "id": 118,
        "linearizedBaseContracts": [
          118
        ],
        "name": "AssetDonation",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 112,
            "name": "lastAssetId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 118,
            "src": "447:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 111,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "447:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 114,
            "name": "lastRequestId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 118,
            "src": "471:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 113,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "471:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 117,
            "name": "maxNoOfReqsPerAsst",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 118,
            "src": "497:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 115,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "497:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33",
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "534:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          }
        ],
        "scope": 119,
        "src": "405:10566:1"
      }
    ],
    "src": "0:10972:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4C9AD7141E337Ac67D7556e148D9A671F1280950",
      "transactionHash": "0x6011219265a97914c22f72cd1a38a0a35a597b47c2b5cd31593ca50a57a6c219"
    },
    "1606707859378": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7852B1e28cAf7664646489237aF0A7820b73778f",
      "transactionHash": "0xc3fc981eed129c453107898fb8385916548a7aa301ee8c24dd1ba36003b00b20"
    },
    "1607052967732": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x9869ee1482368b4ea48cb13a191ba8022b944e7785dbe1804c4e4c11ed347dd1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogDonated",
          "type": "event"
        },
        "0x02be38ab1ac25d38c43ba8eef640edc80bd26853df4de2f92af4fa493699009c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogFree",
          "type": "event"
        },
        "0x05282643e67e7c0869cf9da50ec353bfd9a3ea0a425b4a44ed0d52d59c0d0de2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogIBurned",
          "type": "event"
        },
        "0x47a14632bc73ddfe6204b0adb2b27b0d6f22ce687a669f46c10444f430bcb67e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogInactive",
          "type": "event"
        },
        "0xe6391fd03f941519ec364c5bb85023284b131a59297606d04b2eb06980485ea3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogRequested",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCa5011D08e63B2d14df527d16640675f9f5bcD18",
      "transactionHash": "0x479d56b9c69938fe1a76b3f9a28aa2af853c1fe0ef9d467bad564dbc2e06aca9"
    },
    "1607066895219": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x9869ee1482368b4ea48cb13a191ba8022b944e7785dbe1804c4e4c11ed347dd1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogDonated",
          "type": "event"
        },
        "0x02be38ab1ac25d38c43ba8eef640edc80bd26853df4de2f92af4fa493699009c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogFree",
          "type": "event"
        },
        "0x05282643e67e7c0869cf9da50ec353bfd9a3ea0a425b4a44ed0d52d59c0d0de2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogIBurned",
          "type": "event"
        },
        "0x47a14632bc73ddfe6204b0adb2b27b0d6f22ce687a669f46c10444f430bcb67e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogInactive",
          "type": "event"
        },
        "0xe6391fd03f941519ec364c5bb85023284b131a59297606d04b2eb06980485ea3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "assetId",
              "type": "uint32"
            }
          ],
          "name": "LogRequested",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3FdD29C33457d30198712C409e8A0Be51890b028",
      "transactionHash": "0x3165e1e7632a17e425b6fdc80967b7a0192d8809b12920ace9d208f8234e2764"
    }
  },
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-12-04T23:02:46.801Z",
  "devdoc": {
    "author": "Fatemeh Heidari Soureshjani",
    "details": "time",
    "methods": {},
    "title": "A Asset donation smart contract"
  },
  "userdoc": {
    "methods": {},
    "notice": "This contract facilitates donation of physical assets for specific periods of time between asset owners and receivers"
  }
}